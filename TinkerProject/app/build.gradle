apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.dyx.tp"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 100001
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file("/Users/dayongxin/Desktop/Blog_Code/BlogCode/TinkerProject/keys/tinker.jks")
            storePassword "qwertyuiop"
            keyAlias "Tinker"
            keyPassword "qwertyuiop"
        }

        debug {

        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    provided('com.tencent.tinker:tinker-android-anno:1.7.7')
    compile('com.tencent.tinker:tinker-android-lib:1.7.7')
    compile "com.android.support:multidex:1.0.1"
}
def buildWithTinker() {
    return rootProject.ext.tinkerEnabled
}
if(buildWithTinker()){
    apply plugin: 'com.tencent.tinker.patch'
    /**
     * 配置tinker相关的参数
     */
    tinkerPatch {
        /**
         * 编译相关的配置项
         */
        buildConfig {
            tinkerId=android.defaultConfig.versionCode
        }
    }
}